name: Release

on:
  push:
    branches:
      - main

jobs:
  npm-release:
    name: Release to npm
    runs-on: ubuntu-latest

    timeout-minutes: 15

    steps:
      # Get GitHub token via the CT Changesets App
      - name: Generate GitHub token (via CT Changesets App)
        id: generate_github_token
        uses: tibdex/github-app-token@v2.1.0
        with:
          app_id: ${{ secrets.CT_CHANGESETS_APP_ID }}
          private_key: ${{ secrets.CT_CHANGESETS_APP_PEM }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Pass a personal access token (using our `ct-changesets` app) to be able to trigger other workflows
          # https://help.github.com/en/actions/reference/events-that-trigger-workflows#triggering-new-workflows-using-a-personal-access-token
          # https://github.community/t/action-does-not-trigger-another-on-push-tag-action/17148/8
          token: ${{ steps.generate_github_token.outputs.token }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4.1.0
        id: pnpm-install
        with:
          run_install: false

      - name: Setup Node (uses version in .nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Creating .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            email=npmjs@commercetools.com
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build - TypeScript
        run: pnpm --filter @commercetools/ct-agent-toolkit run build

      - name: Build - Model Context Protocol
        run: pnpm --filter @commercetools/mcp-essentials run build

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm changeset publish
          version: pnpm changeset:version
          commit: "ci(changesets): version packages"
        env:
          GITHUB_TOKEN: ${{ steps.generate_github_token.outputs.token }}
